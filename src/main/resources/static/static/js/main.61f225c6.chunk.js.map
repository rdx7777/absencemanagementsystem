{"version":3,"sources":["auth/AuthService.js","component/Home.js","auth/AuthHeader.js","component/CaseEdit.js","component/Pagination.js","component/AllUserList.js","component/UserEdit.js","component/UserComponent.js","component/AddUserCase.js","component/ActiveCaseList.js","component/SupervisorComponent.js","component/ActiveCaseManagedByHeadTeacherList.js","component/AdminComponent.js","component/CaseDetails.js","component/AllCaseList.js","component/Help.js","component/Help2.js","component/Help3.js","component/Help4.js","component/Help5.js","App.js","serviceWorker.js","index.js"],"names":["username","password","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","parse","getItem","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","state","loading","message","e","this","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","pathname","requiredPage","window","location","reload","error","resMessage","toString","src","alt","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","style","display","Component","authHeader","user","Authorization","CaseEdit","emptyCase","headTeacher","startDate","endDate","partDayType","absenceReason","userComment","isCoverRequired","isCoverProvided","coverSupervisorComment","isApprovedByHeadTeacher","isAbsencePaid","headTeacherComment","hrSupervisorComment","isCaseResolved","aCase","users","headTeachers","returnAddress","undefined","handleChange","handleUserChange","handleHeadTeacherChange","handleSubmit","fetch","headers","json","currentUser","getCurrentUser","filteredUsers","filter","u","id","match","params","event","index","userEditingThisCaseId","Headers","set","method","body","title","map","key","surname","Container","Form","FormGroup","Label","for","Input","defaultValue","to","Button","color","withRouter","LEFT_PAGE","range","from","step","i","Pagination","gotoPage","page","onPageChanged","f","currentPage","Math","max","min","totalPages","paginationData","pageLimit","totalRecords","handleClick","evt","handleMoveLeft","pageNeighbours","handleMoveRight","fetchPageNumbers","totalNumbers","startPage","endPage","pages","hasLeftSpill","hasRightSpill","spillOffset","extraPages","ceil","nextProps","nextContent","currentPages","forceUpdate","aria-label","href","onClick","aria-hidden","AllUserList","currentUsers","isLoading","totalUsers","remove","userList","isActive","email","jobTitle","whiteSpace","margin","alignSelf","size","confirm","fluid","Table","width","UserEdit","emptyUser","position","placeholder","UserComponent","offset","currentCases","cases","totalCases","seen","caseList","isResolved","AddUserCase","filteredHeadTeachers","ht","ActiveCaseList","displayButton","displayHeadTeacherButton","roles","includes","isRequired","isProvided","SupervisorComponent","ActiveCaseManagedByHeadTeacherList","AdminComponent","CaseDetails","isAbsenceApproved","ListGroup","ListGroupItemHeading","ListGroupItem","AllCaseList","allCases","Help","Help2","Help3","Help4","Help5","App","logOut","showCoverSupervisorBoard","showHeadTeacherBoard","showHRSupervisorBoard","showAdminBoard","userForShow","logout","path","exact","component","Home","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.61f225c6.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nclass AuthService {\r\n\r\n    login(username, password) {\r\n        return axios\r\n            .post(\"api/auth/signin\", {\r\n                username,\r\n                password\r\n            })\r\n            .then(response => {\r\n                if (response.data.accessToken) {\r\n                    localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n                }\r\n                return response.data;\r\n            });\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"user\");\r\n    }\r\n\r\n        getCurrentUser() {\r\n        return JSON.parse(localStorage.getItem('user'));\r\n    }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, {Component} from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport AuthService from \"../auth/AuthService\";\r\n\r\nconst required = value => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default class Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            loading: false,\r\n            message: \"\"\r\n        };\r\n    }\r\n\r\n    onChangeUsername(e) {\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangePassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n\r\n    handleLogin(e) {\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            message: \"\",\r\n            loading: true\r\n        });\r\n\r\n        this.form.validateAll();\r\n\r\n        if (this.checkBtn.context._errors.length === 0) {\r\n            AuthService.login(this.state.username, this.state.password).then(\r\n                () => {\r\n                    this.props.history.push({pathname: \"/user\", state: {requiredPage: 1}});\r\n                    window.location.reload();\r\n                },\r\n                error => {\r\n                    const resMessage =\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                        error.message ||\r\n                        error.toString();\r\n\r\n                    this.setState({\r\n                        loading: false,\r\n                        message: resMessage\r\n                    });\r\n                }\r\n            );\r\n        } else {\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-12\">\r\n                <div className=\"card card-container\">\r\n                    <img\r\n                        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n                        alt=\"profile-img\"\r\n                        className=\"profile-img-card\"\r\n                    />\r\n\r\n                    <Form\r\n                        onSubmit={this.handleLogin}\r\n                        ref={c => {\r\n                            this.form = c;\r\n                        }}\r\n                    >\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"username\">Username</label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"username\"\r\n                                value={this.state.username}\r\n                                onChange={this.onChangeUsername}\r\n                                validations={[required]}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <Input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                name=\"password\"\r\n                                value={this.state.password}\r\n                                onChange={this.onChangePassword}\r\n                                validations={[required]}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <button\r\n                                className=\"btn btn-primary btn-block\"\r\n                                disabled={this.state.loading}\r\n                            >\r\n                                {this.state.loading && (\r\n                                    <span className=\"spinner-border spinner-border-sm\"/>\r\n                                )}\r\n                                <span>Login</span>\r\n                            </button>\r\n                        </div>\r\n\r\n                        {this.state.message && (\r\n                            <div className=\"form-group\">\r\n                                <div className=\"alert alert-danger\" role=\"alert\">\r\n                                    {this.state.message}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                        <CheckButton\r\n                            style={{display: \"none\"}}\r\n                            ref={c => {\r\n                                this.checkBtn = c;\r\n                            }}\r\n                        />\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export default function authHeader() {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    if (user && user.accessToken) {\r\n        return {Authorization: 'Bearer ' + user.accessToken};\r\n    } else {\r\n        return {};\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport {Button, Container, Form, FormGroup, Input, Label} from 'reactstrap';\r\nimport authHeader from \"../auth/AuthHeader\";\r\nimport AuthService from \"../auth/AuthService\";\r\n\r\nclass CaseEdit extends Component {\r\n\r\n    emptyCase = {\r\n        user: '',\r\n        headTeacher: '',\r\n        startDate: '',\r\n        endDate: '',\r\n        partDayType: '',\r\n        absenceReason: '',\r\n        userComment: '',\r\n        isCoverRequired: '',\r\n        isCoverProvided: '',\r\n        coverSupervisorComment: '',\r\n        isApprovedByHeadTeacher: '',\r\n        isAbsencePaid: '',\r\n        headTeacherComment: '',\r\n        hrSupervisorComment: '',\r\n        isCaseResolved: ''\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            aCase: this.emptyCase,\r\n            users: [],\r\n            headTeachers: [],\r\n            requiredPage: null,\r\n            returnAddress: undefined\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleUserChange = this.handleUserChange.bind(this);\r\n        this.handleHeadTeacherChange = this.handleHeadTeacherChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.props.location.state !== null) {\r\n            this.setState({requiredPage: this.props.location.state.requiredPage,\r\n                returnAddress: this.props.location.state.returnAddress});\r\n        }\r\n        const headTeachers = await (await fetch('/api/users/headteachers', {headers: authHeader()})).json();\r\n        const users = await (await fetch('/api/users', {headers: authHeader()})).json();\r\n        const currentUser = AuthService.getCurrentUser();\r\n        const filteredUsers = users.filter(u => !(u.id === currentUser.id));\r\n        if (this.props.match.params.id !== 'new') {\r\n            const aCase = await (await fetch(`/api/cases/${this.props.match.params.id}`, {headers: authHeader()})).json();\r\n            this.setState({aCase: aCase, users: filteredUsers, headTeachers: headTeachers});\r\n        } else {\r\n            this.setState({users: filteredUsers, headTeachers: headTeachers})\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        let aCase = {...this.state.aCase};\r\n        aCase[name] = value;\r\n        this.setState({aCase});\r\n    }\r\n\r\n    handleUserChange(event) {\r\n        const {users} = this.state;\r\n        const index = event.target.value;\r\n        let aCase = {...this.state.aCase};\r\n        aCase.user = users[index];\r\n        this.setState({aCase});\r\n    }\r\n\r\n    handleHeadTeacherChange(event) {\r\n        const {headTeachers} = this.state;\r\n        const index = event.target.value;\r\n        let aCase = {...this.state.aCase};\r\n        aCase.headTeacher = headTeachers[index];\r\n        this.setState({aCase});\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        const {aCase} = this.state;\r\n        const userEditingThisCaseId = AuthService.getCurrentUser().id;\r\n        const headers = new Headers(authHeader());\r\n        headers.set('Accept', 'application/json');\r\n        headers.set('Content-Type', 'application/json');\r\n\r\n        await fetch('/api/cases' + (aCase.id ? '?id=' + aCase.id + '&userId=' + userEditingThisCaseId : ''), {\r\n            method: (aCase.id) ? 'PUT' : 'POST',\r\n            headers: headers,\r\n            body: JSON.stringify(aCase)\r\n        });\r\n        this.props.history.push({\r\n            pathname: `${this.state.returnAddress}`,\r\n            state: {requiredPage: this.state.requiredPage}})\r\n    }\r\n\r\n    render() {\r\n        const {aCase, users, headTeachers} = this.state;\r\n        const title = <h2 className=\"mb-n1\">{aCase.id ? 'Edit Case' : 'Add Case'}</h2>;\r\n        const user = users\r\n            .map((user, index) =>\r\n            <option key={index} value={index}>\r\n                {user.name} {user.surname}\r\n            </option>\r\n        );\r\n        const headTeacher = headTeachers\r\n            .map((headTeacher, index) =>\r\n            <option key={index} value={index}>\r\n                {headTeacher.name} {headTeacher.surname}\r\n            </option>\r\n        );\r\n\r\n        return <div>\r\n            <Container>\r\n                {title}\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <div className=\"row\">\r\n                        <FormGroup className=\"col-md-5 mb-n2\">\r\n                            <Label className=\"mb-0\" for=\"user\">Select user (default: </Label>\r\n                            <Label className=\"mb-0 font-weight-bold\" for=\"user\">{aCase.user.name} {aCase.user.surname}</Label>\r\n                            <Label className=\"mb-0\" for=\"user\">) </Label>\r\n                            <Label className=\"mb-0 text-danger\" for=\"user\">*</Label>\r\n                            <Input type=\"select\" name=\"user\" id=\"user\" defaultValue={aCase.user}\r\n                                   onChange={this.handleUserChange}>\r\n                                <option/>\r\n                                {user}\r\n                            </Input>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"col-md-5 mb-n2\">\r\n                            <Label className=\"mb-0\" for=\"headTeacher\">Select Head Teacher (default: </Label>\r\n                            <Label className=\"mb-0 font-weight-bold\" for=\"headTeacher\">{aCase.headTeacher.name} {aCase.headTeacher.surname}</Label>\r\n                            <Label className=\"mb-0\" for=\"headTeacher\">) </Label>\r\n                            <Label className=\"mb-0 text-danger\" for=\"headTeacher\">*</Label>\r\n                            <Input type=\"select\" name=\"headTeacher\" id=\"headTeacher\" defaultValue={aCase.headTeacher}\r\n                                   onChange={this.handleHeadTeacherChange}>\r\n                                <option/>\r\n                                {headTeacher}\r\n                            </Input>\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <FormGroup className=\"col-md-2 mb-n2\">\r\n                            <Label className=\"mb-0\" for=\"startDate\">Start date </Label>\r\n                            <Label className=\"mb-0 text-danger\">*</Label>\r\n                            <Input type=\"text\" name=\"startDate\" id=\"startDate\" value={aCase.startDate}\r\n                                   onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"col-md-2 mb-n2\">\r\n                            <Label className=\"mb-0\" for=\"endDate\">End date </Label>\r\n                            <Label className=\"mb-0 text-danger\">*</Label>\r\n                            <Input type=\"text\" name=\"endDate\" id=\"endDate\" value={aCase.endDate}\r\n                                   onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"col-md-2 mb-n2\">\r\n                            <Label className=\"mb-0\" for=\"partDayType\">Part day type </Label>\r\n                            <Label className=\"mb-0 text-danger\">*</Label>\r\n                            <Input type=\"select\" name=\"partDayType\" id=\"partDayType\" value={aCase.partDayType}\r\n                                   onChange={this.handleChange}>\r\n                                <option/>\r\n                                <option value=\"Morning\">Morning</option>\r\n                                <option value=\"Afternoon\">Afternoon</option>\r\n                                <option value=\"AllDay\">All day</option>\r\n                            </Input>\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <FormGroup className=\"col-md-5 mb-n2\">\r\n                            <Label className=\"mb-0\" for=\"absenceReason\">Absence reason </Label>\r\n                            <Label className=\"mb-0 text-danger\">*</Label>\r\n                            <Input type=\"textarea\" name=\"absenceReason\" id=\"absenceReason\" value={aCase.absenceReason}\r\n                                   onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"col-md-5 mb-n2\">\r\n                            <Label className=\"mb-0\" for=\"userComment\">User comment</Label>\r\n                            <Input type=\"textarea\" name=\"userComment\" id=\"userComment\" value={aCase.userComment}\r\n                                   onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <FormGroup className=\"col-md-2 mb-n2\">\r\n                            <Label className=\"mb-0\" for=\"isCoverRequired\">Cover required </Label>\r\n                            <Label className=\"mb-0 text-danger\">*</Label>\r\n                            <Input type=\"select\" name=\"isCoverRequired\" id=\"isCoverRequired\"\r\n                                   value={aCase.isCoverRequired}\r\n                                   onChange={this.handleChange}>\r\n                                <option/>\r\n                                <option value=\"false\">no</option>\r\n                                <option value=\"true\">yes</option>\r\n                            </Input>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"col-md-2 mb-n2\">\r\n                            <Label className=\"mb-0\" for=\"isCoverProvided\">Cover provided </Label>\r\n                            <Label className=\"mb-0 text-danger\">*</Label>\r\n                            <Input type=\"select\" name=\"isCoverProvided\" id=\"isCoverProvided\"\r\n                                   value={aCase.isCoverProvided}\r\n                                   onChange={this.handleChange}>\r\n                                <option/>\r\n                                <option value=\"false\">no</option>\r\n                                <option value=\"true\">yes</option>\r\n                            </Input>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"col-md-6 mb-n2\">\r\n                            <Label className=\"mb-0\" for=\"coverSupervisorComment\">Cover Supervisor comment</Label>\r\n                            <Input type=\"textarea\" name=\"coverSupervisorComment\" id=\"coverSupervisorComment\"\r\n                                   value={aCase.coverSupervisorComment}\r\n                                   onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <FormGroup className=\"col-md-2 mb-n2\">\r\n                            <Label className=\"mb-0\" for=\"isApprovedByHeadTeacher\">Absence approved </Label>\r\n                            <Label className=\"mb-0 text-danger\">*</Label>\r\n                            <Input type=\"select\" name=\"isApprovedByHeadTeacher\" id=\"isApprovedByHeadTeacher\"\r\n                                   value={aCase.isApprovedByHeadTeacher}\r\n                                   onChange={this.handleChange}>\r\n                                <option/>\r\n                                <option value=\"false\">no</option>\r\n                                <option value=\"true\">yes</option>\r\n                            </Input>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"col-md-2 mb-n2\">\r\n                            <Label className=\"mb-0\" for=\"isAbsencePaid\">Absence paid </Label>\r\n                            <Label className=\"mb-0 text-danger\">*</Label>\r\n                            <Input type=\"select\" name=\"isAbsencePaid\" id=\"isAbsencePaid\"\r\n                                   value={aCase.isAbsencePaid}\r\n                                   onChange={this.handleChange}>\r\n                                <option/>\r\n                                <option value=\"false\">no</option>\r\n                                <option value=\"true\">yes</option>\r\n                            </Input>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"col-md-6 mb-n2\">\r\n                            <Label className=\"mb-0\" for=\"headTeacherComment\">Head Teacher comment</Label>\r\n                            <Input type=\"textarea\" name=\"headTeacherComment\" id=\"headTeacherComment\"\r\n                                   value={aCase.headTeacherComment}\r\n                                   onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <FormGroup className=\"col-md-6 mb-n2\">\r\n                            <Label className=\"mb-0\" for=\"hrSupervisorComment\">HR Supervisor comment</Label>\r\n                            <Input type=\"textarea\" name=\"hrSupervisorComment\" id=\"hrSupervisorComment\"\r\n                                   value={aCase.hrSupervisorComment}\r\n                                   onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"col-md-2 mb-n2\">\r\n                            <Label className=\"mb-0\" for=\"isCaseResolved\">Case resolved </Label>\r\n                            <Label className=\"mb-0 text-danger\">*</Label>\r\n                            <Input type=\"select\" name=\"isCaseResolved\" id=\"isCaseResolved\"\r\n                                   value={aCase.isCaseResolved}\r\n                                   onChange={this.handleChange}>\r\n                                <option/>\r\n                                <option value=\"false\">no</option>\r\n                                <option value=\"true\">yes</option>\r\n                            </Input>\r\n                        </FormGroup>\r\n                        <Link className=\"col-md-1 mb-n2 h-25 align-self-end mr-1\"\r\n                              to={{pathname: `${this.state.returnAddress}`, state: {requiredPage: this.state.requiredPage}}}>\r\n                            <Button color=\"secondary\"\r\n                                    // disabled={this.props.match.params.id !== 'new' ? true : false}\r\n                                    style={{display: this.props.match.params.id === 'new' ? \"\" : \"none\"}}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Link>\r\n                        <Button className=\"col-md-1 mb-n2 h-25 align-self-end mr-1\"\r\n                                color=\"primary\" type=\"submit\">\r\n                            Save\r\n                        </Button>{' '}\r\n                    </div>\r\n                    <FormGroup>\r\n                    </FormGroup>\r\n                </Form>\r\n            </Container>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(CaseEdit);\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst LEFT_PAGE = 'LEFT';\r\nconst RIGHT_PAGE = 'RIGHT';\r\n\r\nconst range = (from, to, step = 1) => {\r\n    let i = from;\r\n    const range = [];\r\n\r\n    while (i <= to) {\r\n        range.push(i);\r\n        i += step;\r\n    }\r\n\r\n    return range;\r\n};\r\n\r\nclass Pagination extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const {totalRecords = null, pageLimit = 30, pageNeighbours = 0, requiredPage = 1} = props;\r\n\r\n        this.totalRecords = typeof totalRecords === 'number' ? totalRecords : 0;\r\n        this.pageLimit = typeof pageLimit === 'number' ? pageLimit : 30;\r\n\r\n        // pageNeighbours can be: 0, 1 or 2\r\n        this.pageNeighbours = typeof pageNeighbours === 'number'\r\n            ? Math.max(0, Math.min(pageNeighbours, 2))\r\n            : 0;\r\n\r\n        this.requiredPage = typeof requiredPage === 'number' ? requiredPage : 1;\r\n\r\n        this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\r\n        if (this.totalPages === 0) {\r\n            this.totalPages = 1;\r\n        }\r\n\r\n        this.state = {currentPage: requiredPage};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.gotoPage(this.requiredPage);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextContent) {\r\n        this.totalRecords = this.props.totalRecords;\r\n        this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\r\n        if ((this.state.currentPage > this.totalPages) && (this.totalRecords !== 0)) {\r\n            this.setState({currentPages: this.totalPages});\r\n            this.gotoPage(this.state.currentPage);\r\n        }\r\n        this.forceUpdate();\r\n    }\r\n\r\n    gotoPage = page => {\r\n        const {onPageChanged = f => f} = this.props;\r\n        let currentPage = Math.max(0, Math.min(page, this.totalPages));\r\n\r\n        const paginationData = {\r\n            currentPage,\r\n            totalPages: this.totalPages,\r\n            pageLimit: this.pageLimit,\r\n            totalRecords: this.totalRecords\r\n        };\r\n\r\n        this.setState({currentPage}, () => onPageChanged(paginationData));\r\n    };\r\n\r\n    handleClick = page => evt => {\r\n        evt.preventDefault();\r\n        this.gotoPage(page);\r\n    };\r\n\r\n    handleMoveLeft = evt => {\r\n        evt.preventDefault();\r\n        this.gotoPage(this.state.currentPage - (this.pageNeighbours * 2) - 1);\r\n    };\r\n\r\n    handleMoveRight = evt => {\r\n        evt.preventDefault();\r\n        this.gotoPage(this.state.currentPage + (this.pageNeighbours * 2) + 1);\r\n    };\r\n\r\n    fetchPageNumbers = () => {\r\n\r\n        let totalPages = this.totalPages;\r\n        const currentPage = this.state.currentPage;\r\n        const pageNeighbours = this.pageNeighbours;\r\n\r\n        /**\r\n         * totalNumbers: the total page numbers to show on the control\r\n         * totalBlocks: totalNumbers + 2 to cover for the left(<) and right(>) controls\r\n         */\r\n        const totalNumbers = (this.pageNeighbours * 2) + 3;\r\n        const totalBlocks = totalNumbers + 2;\r\n\r\n        if (totalPages > totalBlocks) {\r\n\r\n            const startPage = Math.max(2, currentPage - pageNeighbours);\r\n            const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\r\n\r\n            let pages = range(startPage, endPage);\r\n\r\n            /**\r\n             * hasLeftSpill: has hidden pages to the left\r\n             * hasRightSpill: has hidden pages to the right\r\n             * spillOffset: number of hidden pages either to the left or to the right\r\n             */\r\n            const hasLeftSpill = startPage > 2;\r\n            const hasRightSpill = (totalPages - endPage) > 1;\r\n            const spillOffset = totalNumbers - (pages.length + 1);\r\n\r\n            switch (true) {\r\n                // handle: (1) < {5 6} [7] {8 9} (10)\r\n                case (hasLeftSpill && !hasRightSpill): {\r\n                    const extraPages = range(startPage - spillOffset, startPage - 1);\r\n                    pages = [LEFT_PAGE, ...extraPages, ...pages];\r\n                    break;\r\n                }\r\n\r\n                // handle: (1) {2 3} [4] {5 6} > (10)\r\n                case (!hasLeftSpill && hasRightSpill): {\r\n                    const extraPages = range(endPage + 1, endPage + spillOffset);\r\n                    pages = [...pages, ...extraPages, RIGHT_PAGE];\r\n                    break;\r\n                }\r\n\r\n                // handle: (1) < {4 5} [6] {7 8} > (10)\r\n                case (hasLeftSpill && hasRightSpill):\r\n                default: {\r\n                    pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return [1, ...pages, totalPages];\r\n\r\n        }\r\n\r\n        return range(1, totalPages);\r\n\r\n    };\r\n\r\n    render() {\r\n\r\n        if (!this.totalRecords || this.totalPages === 1) return null;\r\n\r\n        const {currentPage} = this.state;\r\n        const pages = this.fetchPageNumbers();\r\n\r\n        return (\r\n            <Fragment>\r\n                <nav aria-label=\"Cases Pagination\">\r\n                    <ul className=\"pagination align-content-md-center\">\r\n                        {pages.map((page, index) => {\r\n\r\n                            if (page === LEFT_PAGE) return (\r\n                                <li key={index} className=\"page-item\">\r\n                                    <a className=\"page-link\" href=\"#\" aria-label=\"Previous\" onClick={this.handleMoveLeft}>\r\n                                        <span aria-hidden=\"true\">&laquo;</span>\r\n                                        <span className=\"sr-only\">Previous</span>\r\n                                    </a>\r\n                                </li>\r\n                            );\r\n\r\n                            if (page === RIGHT_PAGE) return (\r\n                                <li key={index} className=\"page-item\">\r\n                                    <a className=\"page-link\" href=\"#\" aria-label=\"Next\" onClick={this.handleMoveRight}>\r\n                                        <span aria-hidden=\"true\">&raquo;</span>\r\n                                        <span className=\"sr-only\">Next</span>\r\n                                    </a>\r\n                                </li>\r\n                            );\r\n\r\n                            return (\r\n                                <li key={index} className={`page-item${ currentPage === page ? ' active' : ''}`}>\r\n                                    <a className=\"page-link\" href=\"#\" onClick={this.handleClick(page)}>{ page }</a>\r\n                                </li>\r\n                            );})\r\n                        }\r\n\r\n                    </ul>\r\n                </nav>\r\n            </Fragment>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nPagination.propTypes = {\r\n    totalRecords: PropTypes.number.isRequired,\r\n    pageLimit: PropTypes.number,\r\n    pageNeighbours: PropTypes.number,\r\n    requiredPage: PropTypes.number,\r\n    onPageChanged: PropTypes.func\r\n};\r\n\r\nexport default Pagination;\r\n","import React, {Component} from \"react\";\r\nimport {Button, Container, Table} from \"reactstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport authHeader from \"../auth/AuthHeader\";\r\nimport Pagination from \"./Pagination\";\r\n\r\nclass AllUserList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users: [],\r\n            currentUsers: [],\r\n            totalUsers: null,\r\n            currentPage: null,\r\n            requiredPage: null,\r\n            totalPages: null,\r\n            pageLimit: null,\r\n            isLoading: true\r\n        };\r\n        this.remove = this.remove.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.location.state !== null) {\r\n            this.setState({requiredPage: this.props.location.state.requiredPage});\r\n        }\r\n        this.setState({isLoading: true});\r\n\r\n        fetch('api/users/count', {headers: authHeader()})\r\n            .then(response => response.json())\r\n            .then(data => this.setState({totalUsers: data, isLoading: false}));\r\n    }\r\n\r\n    onPageChanged = data => {\r\n        const {currentPage, totalPages, pageLimit} = data;\r\n        const offset = (currentPage - 1) * pageLimit;\r\n\r\n        fetch(`api/users?offset=${offset}&limit=${pageLimit}`, {headers: authHeader()})\r\n            .then(response => response.json())\r\n            .then(data => this.setState({currentUsers: data, isLoading: false,\r\n                currentPage: currentPage, totalPages: totalPages, pageLimit: pageLimit}));\r\n    };\r\n\r\n    async remove(id) {\r\n        const headers = new Headers(authHeader());\r\n        headers.set('Accept', 'application/json');\r\n        headers.set('Content-Type', 'application/json');\r\n\r\n        await fetch(`/api/users/${id}`, {\r\n            method: 'DELETE',\r\n            headers: headers\r\n        }).then(() => {\r\n            fetch('api/users/count', {headers: authHeader()})\r\n                .then(response => response.json())\r\n                .then(data => this.setState({totalUsers: data, isLoading: false}))\r\n                .then(() => {\r\n                    const {currentPage, pageLimit} = this.state;\r\n                    const offset = (currentPage - 1) * pageLimit;\r\n                    fetch(`api/users?offset=${offset}&limit=${pageLimit}`, {headers: authHeader()})\r\n                        .then(response => response.json())\r\n                        .then(data => this.setState({currentUsers: data, isLoading: false}));\r\n                });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {currentUsers, isLoading} = this.state;\r\n\r\n        if (isLoading) {\r\n            return <p>Loading...</p>;\r\n        }\r\n\r\n        const userList = currentUsers.map(user => {\r\n            var isActive;\r\n            isActive = user.isActive ? 'yes' : 'no';\r\n            var role;\r\n            if (user.role === 'ROLE_USER') {role = \"user\"}\r\n            if (user.role === 'ROLE_CS_SUPERVISOR') {role = \"cover supervisor\"}\r\n            if (user.role === 'ROLE_HEAD_TEACHER') {role = \"head teacher\"}\r\n            if (user.role === 'ROLE_HR_SUPERVISOR') {role = \"HR supervisor\"}\r\n            if (user.role === 'ROLE_ADMIN') {role = \"admin\"}\r\n            return <tr key={user.id}>\r\n                <td>{user.id}</td>\r\n                <td>{user.name || ''} {user.surname || ''}</td>\r\n                <td>{user.email}</td>\r\n                <td>{user.jobTitle}</td>\r\n                <td>{isActive}</td>\r\n                <td>{role}</td>\r\n                <td>\r\n                    <Link to={{pathname: \"/users/\" + user.id, state: {requiredPage: this.state.currentPage}}}>\r\n                        <Button style={{whiteSpace: 'nowrap', margin: '0 5px 0 auto', alignSelf: 'center'}}\r\n                                size=\"sm\" color=\"warning\">\r\n                            Edit\r\n                        </Button>\r\n                    </Link>\r\n                    <Button style={{whiteSpace: 'nowrap', margin: '0 5px 0 auto', alignSelf: 'center'}}\r\n                            size=\"sm\" color=\"danger\"\r\n                            onClick={() => {if (window.confirm('Are you sure you want to delete this user?')) this.remove(user.id)}}>\r\n                        Delete\r\n                    </Button>\r\n                </td>\r\n            </tr>\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <Container fluid>\r\n                    <div className=\"float-right\">\r\n                        <Link to={{pathname: \"/users/new\", state: {requiredPage: this.state.currentPage}}}>\r\n                            <Button color=\"success\">\r\n                                Add User\r\n                            </Button>\r\n                        </Link>\r\n                    </div>\r\n                    <h3>Users</h3>\r\n                    <Table className=\"mt-4\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th width=\"5%\">Id</th>\r\n                            <th width=\"15%\">Name & Surname</th>\r\n                            <th width=\"20%\">Email</th>\r\n                            <th width=\"20%\">Job Title</th>\r\n                            <th width=\"5%\">Active?</th>\r\n                            {/*<th width=\"5%\">User position</th>*/}\r\n                            <th width=\"10%\">Authorisation</th>\r\n                            <th width=\"15%\">Actions</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {userList}\r\n                        </tbody>\r\n                    </Table>\r\n                    <div className=\"d-flex flex-row py-4 align-items-center\">\r\n                        <Pagination totalRecords={this.state.totalUsers} pageLimit={4} pageNeighbours={1}\r\n                                    requiredPage={this.state.requiredPage}\r\n                                    onPageChanged={this.onPageChanged}\r\n                        />\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AllUserList;\r\n","import React, {Component} from \"react\";\r\nimport {Button, Container, Form, FormGroup, Input, Label} from \"reactstrap\";\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport authHeader from \"../auth/AuthHeader\";\r\n\r\nclass UserEdit extends Component {\r\n\r\n    emptyUser = {\r\n        name: '',\r\n        surname: '',\r\n        email: '',\r\n        password: '',\r\n        jobTitle: '',\r\n        isActive: '',\r\n        position: '',\r\n        role: ''\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: this.emptyUser,\r\n            requiredPage: null\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.props.location.state !== null) {\r\n            this.setState({requiredPage: this.props.location.state.requiredPage});\r\n        }\r\n        if (this.props.match.params.id !== 'new') {\r\n            const user = await (await fetch(`/api/users/${this.props.match.params.id}`, {headers: authHeader()})).json();\r\n            this.setState({user: user});\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        let user = {...this.state.user};\r\n        user[name] = value;\r\n        this.setState({user});\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        const {user} = this.state;\r\n        const headers = new Headers(authHeader());\r\n        headers.set('Accept', 'application/json');\r\n        headers.set('Content-Type', 'application/json');\r\n\r\n        await fetch('/api/users' + (user.id ? '/' + user.id : ''), {\r\n            method: (user.id) ? 'PUT' : 'POST',\r\n            headers: headers,\r\n            body: JSON.stringify(user)\r\n        });\r\n        this.props.history.push({\r\n            pathname: '/users',\r\n            state: {requiredPage: this.state.requiredPage}})\r\n    }\r\n\r\n    render() {\r\n        const {user} = this.state;\r\n        const title = <h2>{user.id ? 'Edit User' : 'Add User'}</h2>;\r\n\r\n        return <div>\r\n            <Container>\r\n                {title}\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <div className=\"row\">\r\n                        <FormGroup className=\"col-md-4 mb-3\">\r\n                            <Label for=\"name\">Name </Label>\r\n                            <Label className=\"text-danger\" for=\"name\">*</Label>\r\n                            <Input type=\"text\" name=\"name\" id=\"name\" value={user.name}\r\n                                   onChange={this.handleChange}>\r\n                            </Input>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"col-md-4 mb-3\">\r\n                            <Label for=\"surname\">Surname </Label>\r\n                            <Label className=\"text-danger\" for=\"surname\">*</Label>\r\n                            <Input type=\"text\" name=\"surname\" id=\"surname\" value={user.surname}\r\n                                   onChange={this.handleChange}>\r\n                            </Input>\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <FormGroup className=\"col-md-4 mb-3\">\r\n                            <Label for=\"email\">Email </Label>\r\n                            <Label className=\"text-danger\" for=\"email\">*</Label>\r\n                            <Input type=\"email\" name=\"email\" id=\"email\" value={user.email}\r\n                                   onChange={this.handleChange} placeholder=\"user email\"/>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"col-md-6 mb-3\">\r\n                            <Label for=\"password\">Password </Label>\r\n                            <Label className=\"text-danger\" for=\"password\">*</Label>\r\n                            <Input type=\"text\" name=\"password\" id=\"password\" value={user.password}\r\n                                   onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <FormGroup className=\"col-md-4 mb-3\">\r\n                            <Label for=\"jobTitle\">Job title </Label>\r\n                            <Label className=\"text-danger\" for=\"jobTitle\">*</Label>\r\n                            <Input type=\"text\" name=\"jobTitle\" id=\"jobTitle\" value={user.jobTitle}\r\n                                   onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"col-md-2 mb-3\">\r\n                            <Label for=\"isActive\">User active? </Label>\r\n                            <Label className=\"text-danger\" for=\"isActive\">*</Label>\r\n                            <Input type=\"select\" name=\"isActive\" id=\"isActive\" value={user.isActive}\r\n                                   onChange={this.handleChange}>\r\n                                <option/>\r\n                                <option value=\"false\">no</option>\r\n                                <option value=\"true\">yes</option>\r\n                            </Input>\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <FormGroup className=\"col-md-2 mb-3\">\r\n                            <Label for=\"position\">Position </Label>\r\n                            <Label className=\"text-danger\" for=\"position\">*</Label>\r\n                            <Input type=\"select\" name=\"position\" id=\"position\" value={user.position}\r\n                                   onChange={this.handleChange}>\r\n                                <option value=\"\"/>\r\n                                <option value=\"Employee\">Employee</option>\r\n                                <option value=\"CoverSupervisor\">Cover Supervisor</option>\r\n                                <option value=\"HeadTeacher\">Head Teacher</option>\r\n                                <option value=\"HumanResourcesSupervisor\">HR Supervisor</option>\r\n                            </Input>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"col-md-4 mb-3\">\r\n                            <Label for=\"role\">Authorisation </Label>\r\n                            <Label className=\"text-danger\" for=\"role\">*</Label>\r\n                            <Input type=\"select\" name=\"role\" id=\"role\" value={user.role}\r\n                                   onChange={this.handleChange}>\r\n                                <option value=\"\"/>\r\n                                <option value=\"ROLE_USER\">authorisation: user</option>\r\n                                <option value=\"ROLE_CS_SUPERVISOR\">authorisation: cover supervisor</option>\r\n                                <option value=\"ROLE_HEAD_TEACHER\">authorisation: head teacher</option>\r\n                                <option value=\"ROLE_HR_SUPERVISOR\">authorisation: HR supervisor</option>\r\n                                <option value=\"ROLE_ADMIN\">authorisation: admin</option>\r\n                            </Input>\r\n                        </FormGroup>\r\n                    </div>\r\n                    <FormGroup>\r\n                        <Button color=\"primary\"\r\n                                type=\"submit\">\r\n                            Save\r\n                        </Button>{' '}\r\n                        <Link to={{pathname: '/users', state: {requiredPage: this.state.requiredPage}}}>\r\n                            <Button color=\"secondary\">\r\n                                Cancel\r\n                            </Button>\r\n                        </Link>\r\n                    </FormGroup>\r\n                </Form>\r\n            </Container>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(UserEdit);\r\n","import React, {Component} from \"react\";\r\nimport AuthService from \"../auth/AuthService\";\r\nimport {Button, Container, Table} from \"reactstrap\";\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport authHeader from \"../auth/AuthHeader\";\r\nimport Pagination from \"./Pagination\";\r\n\r\nclass UserComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cases: [],\r\n            currentCases: [],\r\n            totalCases: null,\r\n            currentPage: null,\r\n            requiredPage: null,\r\n            totalPages: null,\r\n            pageLimit: null,\r\n            isLoading: true,\r\n            seen: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.location.state !== null) {\r\n            this.setState({requiredPage: this.props.location.state.requiredPage});\r\n        }\r\n        this.setState({isLoading: true});\r\n        const currentUser = AuthService.getCurrentUser();\r\n        const id = currentUser.id;\r\n\r\n        fetch('api/cases/count/user/' + id, {headers: authHeader()})\r\n            .then(response => response.json())\r\n            .then(data => this.setState({totalCases: data, isLoading: false}));\r\n    }\r\n\r\n    onPageChanged = data => {\r\n        const currentUser = AuthService.getCurrentUser();\r\n        const id = currentUser.id;\r\n\r\n        const {currentPage, totalPages, pageLimit} = data;\r\n        const offset = (currentPage - 1) * pageLimit;\r\n\r\n        fetch(`api/cases/user/${id}?offset=${offset}&limit=${pageLimit}`, {headers: authHeader()})\r\n            .then(response => response.json())\r\n            .then(data => this.setState({currentCases: data, isLoading: false,\r\n                currentPage: currentPage, totalPages: totalPages, pageLimit: pageLimit}));\r\n    };\r\n\r\n    render() {\r\n        const {currentCases, isLoading} = this.state;\r\n\r\n        if (isLoading) {\r\n            return <p>Loading...</p>;\r\n        }\r\n\r\n        const caseList = currentCases.map(aCase => {\r\n            var isResolved;\r\n            if (aCase.isCaseResolved) {\r\n                isResolved = 'yes'\r\n            } else {\r\n                isResolved = 'no'\r\n            }\r\n            return <tr key={aCase.id}>\r\n                <td>{aCase.id}</td>\r\n                <td>{aCase.headTeacher.name || ''} {aCase.headTeacher.surname || ''}</td>\r\n                <td>{aCase.startDate}</td>\r\n                <td>{aCase.endDate}</td>\r\n                <td>{aCase.absenceReason}</td>\r\n                <td>{isResolved}</td>\r\n                <td>\r\n                    <Button style={{whiteSpace: 'nowrap', margin: '0 5px 0 auto', alignSelf: 'center'}}\r\n                            size=\"sm\" color=\"primary\"\r\n                            onClick={() => this.props.history.push({\r\n                                pathname: '/case_details',\r\n                                state: {aCase: aCase, returnAddress: '/user', requiredPage: this.state.currentPage}})}>\r\n                        Details\r\n                    </Button>\r\n                </td>\r\n            </tr>\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <Container fluid>\r\n                    <div className=\"float-right\">\r\n                        <Link to={{pathname: '/add_user_case',\r\n                            state: {returnAddress: '/user', requiredPage: this.state.currentPage}}}>\r\n                            <Button style={{whiteSpace: 'nowrap', margin: '0 5px 0 auto', alignSelf: 'center'}}\r\n                                    color=\"success\">\r\n                                Add Your Case\r\n                            </Button>\r\n                        </Link>\r\n                    </div>\r\n                    <h3>Your Absence Cases</h3>\r\n                    <Table className=\"mt-4 \">\r\n                        <thead>\r\n                        <tr>\r\n                            <th width=\"5%\">Id</th>\r\n                            <th width=\"10%\">Head Teacher</th>\r\n                            <th width=\"5%\">Start Date</th>\r\n                            <th width=\"5%\">End Date</th>\r\n                            <th width=\"10%\">Absence Reason</th>\r\n                            <th width=\"8%\">Case Resolved?</th>\r\n                            <th width=\"10%\">Actions</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {caseList}\r\n                        </tbody>\r\n                    </Table>\r\n                    <div className=\"d-flex flex-row py-4 align-items-center\">\r\n                        <Pagination totalRecords={this.state.totalCases} pageLimit={4} pageNeighbours={1}\r\n                                    requiredPage={this.state.requiredPage}\r\n                                    onPageChanged={this.onPageChanged}\r\n                        />\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(UserComponent);\r\n","import React, {Component} from 'react';\r\nimport {Button, Container, Form, FormGroup, Input, Label} from 'reactstrap';\r\nimport AuthService from \"../auth/AuthService\";\r\nimport authHeader from \"../auth/AuthHeader\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class AddUserCase extends Component {\r\n\r\n    emptyCase = {\r\n        id: '',\r\n        user: '',\r\n        headTeacher: '',\r\n        startDate: '',\r\n        endDate: '',\r\n        partDayType: '',\r\n        absenceReason: '',\r\n        userComment: '',\r\n        isCoverRequired: '',\r\n        isCoverProvided: '',\r\n        coverSupervisorComment: '',\r\n        isApprovedByHeadTeacher: '',\r\n        isAbsencePaid: '',\r\n        headTeacherComment: '',\r\n        hrSupervisorComment: '',\r\n        isCaseResolved: ''\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            aCase: this.emptyCase,\r\n            user: undefined,\r\n            headTeachers: [],\r\n            requiredPage: null,\r\n            returnAddress: undefined\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleHeadTeacherChange = this.handleHeadTeacherChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.props.location.state !== null) {\r\n            this.setState({requiredPage: this.props.location.state.requiredPage,\r\n                returnAddress: this.props.location.state.returnAddress});\r\n        }\r\n        const currentUser = AuthService.getCurrentUser();\r\n        const user = await (await fetch(`/api/users/${currentUser.id}`, {headers: authHeader()})).json();\r\n        const headTeachers = await (await fetch('/api/users/headteachers', {headers: authHeader()})).json();\r\n        const filteredHeadTeachers = headTeachers.filter(u => !(u.id === currentUser.id));\r\n\r\n        const {aCase} = this.state;\r\n\r\n        aCase.id = null;\r\n        aCase.user = user;\r\n        aCase.isCoverProvided = false;\r\n        aCase.isApprovedByHeadTeacher = false;\r\n        aCase.isAbsencePaid = false;\r\n        aCase.isCaseResolved = false;\r\n\r\n        this.setState({aCase: aCase, user: user, headTeachers: filteredHeadTeachers});\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        let aCase = {...this.state.aCase};\r\n        aCase[name] = value;\r\n        this.setState({aCase});\r\n    }\r\n\r\n    handleHeadTeacherChange(event) {\r\n        const {headTeachers} = this.state;\r\n        const index = event.target.value;\r\n        let aCase = {...this.state.aCase};\r\n        aCase.headTeacher = headTeachers[index];\r\n        this.setState({aCase});\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        const {aCase} = this.state;\r\n        const headers = new Headers(authHeader());\r\n        headers.set('Accept', 'application/json');\r\n        headers.set('Content-Type', 'application/json');\r\n\r\n        await fetch('/api/cases', {\r\n            method: 'POST',\r\n            headers: headers,\r\n            body: JSON.stringify(aCase)\r\n        });\r\n        this.props.history.push({\r\n            pathname: `${this.state.returnAddress}`,\r\n            state: {requiredPage: this.state.requiredPage}})\r\n    }\r\n\r\n    render() {\r\n        const {aCase, headTeachers} = this.state;\r\n        const title = <h2>Add Case</h2>;\r\n        const currentUser = AuthService.getCurrentUser();\r\n        const headTeacher = headTeachers\r\n            .filter(ht => !(ht.id === currentUser.id))\r\n            .map((headTeacher, index) =>\r\n            <option key={index} value={index}>\r\n                {headTeacher.name} {headTeacher.surname}\r\n            </option>\r\n        );\r\n\r\n        return <div>\r\n            <Container>\r\n                {title}\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <div className=\"row\">\r\n                        <FormGroup className=\"col-md-4 mb-3\">\r\n                            <Label>User: {aCase.user.name} {aCase.user.surname}</Label>\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <FormGroup className=\"col-md-4 mb-3\">\r\n                            <Label for=\"headTeacher\">Select Head Teacher </Label>\r\n                            <Label className=\"text-danger\">*</Label>\r\n                            <Input type=\"select\" name=\"headTeacher\" id=\"headTeacher\" defaultValue={aCase.headTeacher}\r\n                                   onChange={this.handleHeadTeacherChange}>\r\n                                <option/>\r\n                                {headTeacher}\r\n                            </Input>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"col-md-2 mb-3\">\r\n                            <Label for=\"startDate\">Start Date </Label>\r\n                            <Label className=\"text-danger\">*</Label>\r\n                            <Input type=\"text\" name=\"startDate\" id=\"startDate\" value={aCase.startDate} placeholder=\"YYYY-MM-DD\"\r\n                                   onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"col-md-2 mb-3\">\r\n                            <Label for=\"endDate\">End Date </Label>\r\n                            <Label className=\"text-danger\">*</Label>\r\n                            <Input type=\"text\" name=\"endDate\" id=\"endDate\" value={aCase.endDate} placeholder=\"YYYY-MM-DD\"\r\n                                   onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"col-md-2 mb-3\">\r\n                            <Label for=\"partDayType\">Part Day Type </Label>\r\n                            <Label className=\"text-danger\">*</Label>\r\n                            <Input type=\"select\" name=\"partDayType\" id=\"partDayType\" value={aCase.partDayType}\r\n                                   onChange={this.handleChange}>\r\n                                <option/>\r\n                                <option value=\"Morning\">Morning</option>\r\n                                <option value=\"Afternoon\">Afternoon</option>\r\n                                <option value=\"AllDay\">All day</option>\r\n                            </Input>\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <FormGroup className=\"col-md-5 mb-3\">\r\n                            <Label for=\"absenceReason\">Absence Reason </Label>\r\n                            <Label className=\"text-danger\">*</Label>\r\n                            <Input type=\"textarea\" name=\"absenceReason\" id=\"absenceReason\" value={aCase.absenceReason}\r\n                                   onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"col-md-5 mb-3\">\r\n                            <Label for=\"userComment\">User Comment</Label>\r\n                            <Input type=\"textarea\" name=\"userComment\" id=\"userComment\" value={aCase.userComment}\r\n                                   onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <FormGroup className=\"col-md-2 mb-3\">\r\n                            <Label for=\"isCoverRequired\">Cover Required </Label>\r\n                            <Label className=\"text-danger\">*</Label>\r\n                            <Input type=\"select\" name=\"isCoverRequired\" id=\"isCoverRequired\"\r\n                                   value={aCase.isCoverRequired}\r\n                                   onChange={this.handleChange}>\r\n                                <option/>\r\n                                <option value=\"false\">no</option>\r\n                                <option value=\"true\">yes</option>\r\n                            </Input>\r\n                        </FormGroup>\r\n                    </div>\r\n                    <FormGroup>\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                            Save\r\n                        </Button>{' '}\r\n                        <Link to={{pathname: `${this.state.returnAddress}`, state: {requiredPage: this.state.requiredPage}}}>\r\n                            <Button color=\"secondary\">\r\n                                Cancel\r\n                            </Button>\r\n                        </Link>\r\n                    </FormGroup>\r\n                </Form>\r\n            </Container>\r\n        </div>\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Button, Container, Table} from 'reactstrap';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport AuthService from \"../auth/AuthService\";\r\nimport authHeader from \"../auth/AuthHeader\";\r\nimport Pagination from \"./Pagination\";\r\n\r\nclass ActiveCaseList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cases: [],\r\n            currentCases: [],\r\n            totalCases: null,\r\n            currentPage: null,\r\n            requiredPage: null,\r\n            totalPages: null,\r\n            pageLimit: null,\r\n            displayButton: \"none\",\r\n            displayHeadTeacherButton: \"none\",\r\n            isLoading: true,\r\n        };\r\n        this.remove = this.remove.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.location.state !== null) {\r\n            this.setState({requiredPage: this.props.location.state.requiredPage});\r\n        }\r\n        this.setState({isLoading: true});\r\n        const currentUser = AuthService.getCurrentUser();\r\n        if (currentUser.roles.includes(\"ROLE_ADMIN\")) {\r\n            this.setState({displayButton: \"\"})\r\n        }\r\n        if (currentUser.roles.includes(\"ROLE_HEAD_TEACHER\")) {\r\n            this.setState({displayHeadTeacherButton: \"\"})\r\n        }\r\n\r\n        fetch('api/cases/active/count', {headers: authHeader()})\r\n            .then(response => response.json())\r\n            .then(data => this.setState({totalCases: data, isLoading: false}));\r\n    }\r\n\r\n    onPageChanged = data => {\r\n        const {currentPage, totalPages, pageLimit} = data;\r\n        const offset = (currentPage - 1) * pageLimit;\r\n\r\n        fetch(`api/cases/active?offset=${offset}&limit=${pageLimit}`, {headers: authHeader()})\r\n            .then(response => response.json())\r\n            .then(data => this.setState({currentCases: data, isLoading: false,\r\n                currentPage: currentPage, totalPages: totalPages, pageLimit: pageLimit}));\r\n    };\r\n\r\n    async remove(id) {\r\n        const headers = new Headers(authHeader());\r\n        headers.set('Accept', 'application/json');\r\n        headers.set('Content-Type', 'application/json');\r\n        await fetch(`/api/cases/${id}`, {\r\n            method: 'DELETE',\r\n            headers: headers\r\n        }).then(() => {\r\n            fetch('api/cases/active/count', {headers: authHeader()})\r\n                .then(response => response.json())\r\n                .then(data => this.setState({totalCases: data, isLoading: false}))\r\n                .then(() => {\r\n                    const {currentPage, pageLimit} = this.state;\r\n                    const offset = (currentPage - 1) * pageLimit;\r\n                    fetch(`api/cases/active?offset=${offset}&limit=${pageLimit}`, {headers: authHeader()})\r\n                        .then(response => response.json())\r\n                        .then(data => this.setState({currentCases: data, isLoading: false}));\r\n                });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {currentCases, displayButton, displayHeadTeacherButton, isLoading} = this.state;\r\n\r\n        if (isLoading) {\r\n            return <p>Loading...</p>;\r\n        }\r\n\r\n        const caseList = currentCases.map(aCase => {\r\n            var isRequired;\r\n            if (aCase.isCoverRequired) {isRequired='yes'} else {isRequired='no'}\r\n            var isProvided;\r\n            if (aCase.isCoverProvided) {isProvided = 'yes'} else {isProvided = 'no'}\r\n            var isResolved;\r\n            if (aCase.isCaseResolved) {isResolved = 'yes'} else {isResolved = 'no'}\r\n            return <tr key={aCase.id}>\r\n                <td style={{whiteSpace: 'nowrap'}}>{aCase.id}</td>\r\n                <td>{aCase.user.name || ''} {aCase.user.surname || ''}</td>\r\n                <td>{aCase.headTeacher.name || ''} {aCase.headTeacher.surname || ''}</td>\r\n                <td>{aCase.startDate}</td>\r\n                <td>{aCase.endDate}</td>\r\n                <td>{isRequired}</td>\r\n                <td>{isProvided}</td>\r\n                <td>{isResolved}</td>\r\n                <td>\r\n                    <Button style={{whiteSpace: 'nowrap', margin: '0 5px 0 auto', alignSelf: 'center'}}\r\n                            size=\"sm\" color=\"primary\"\r\n                            onClick={() => this.props.history.push({\r\n                                pathname: '/case_details',\r\n                                state: {aCase: aCase, returnAddress: '/active_cases', requiredPage: this.state.currentPage}\r\n                            })}>\r\n                        Details\r\n                    </Button>\r\n                    <Link to={{pathname: \"/cases/\" + aCase.id,\r\n                        state: {returnAddress: '/active_cases', requiredPage: this.state.currentPage}}}>\r\n                        <Button style={{whiteSpace: 'nowrap', margin: '0 5px 0 auto', alignSelf: 'center'}}\r\n                                size=\"sm\" color=\"warning\"\r\n                                disabled={aCase.isCaseResolved ? true : false}>\r\n                            Edit\r\n                        </Button>\r\n                    </Link>\r\n                    <Button style={{whiteSpace: 'nowrap', margin: '0 5px 0 auto', alignSelf: 'center', display: `${displayButton}`}}\r\n                            size=\"sm\" color=\"danger\"\r\n                            onClick={() => {if (window.confirm('Are you sure you want to delete this case?'))\r\n                                this.remove(aCase.id)}}>\r\n                        Delete\r\n                    </Button>\r\n                </td>\r\n            </tr>\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <Container fluid>\r\n                    <div className=\"float-right\">\r\n                        <Link to={{pathname: '/active_cases_managed_by_headteacher', state: {requiredPage: 1}}}>\r\n                            <Button style={{whiteSpace: 'nowrap', margin: '0 5px 0 auto', alignSelf: 'center', display: `${displayHeadTeacherButton}`}}\r\n                                    color=\"primary\">\r\n                                Show All Active Head Teacher Cases\r\n                            </Button>\r\n                        </Link>\r\n                        <Link to={{pathname: \"/cases\", state: {requiredPage: 1}}}>\r\n                            <Button style={{whiteSpace: 'nowrap', margin: '0 5px 0 auto', alignSelf: 'center'}}\r\n                                    color=\"primary\">\r\n                                Show All Cases\r\n                            </Button>\r\n                        </Link>\r\n                        <Link to={{pathname: '/cases/new',\r\n                            state: {returnAddress: '/active_cases', requiredPage: this.state.currentPage}}}>\r\n                            <Button style={{whiteSpace: 'nowrap', margin: '0 5px 0 auto', alignSelf: 'center'}}\r\n                                    color=\"success\">\r\n                                Add Employee Case\r\n                            </Button>\r\n                        </Link>\r\n                    </div>\r\n                    <h3>Absence Cases (active)</h3>\r\n                    <Table className=\"mt-4\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th width=\"5%\">Id</th>\r\n                            <th width=\"15%\">User</th>\r\n                            <th width=\"15%\">Head Teacher</th>\r\n                            <th width=\"10%\">Start date</th>\r\n                            <th width=\"10%\">End date</th>\r\n                            <th width=\"5%\">Cover required?</th>\r\n                            <th width=\"5%\">Cover provided?</th>\r\n                            <th width=\"5%\">Case resolved?</th>\r\n                            <th width=\"20%\">Actions</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {caseList}\r\n                        </tbody>\r\n                    </Table>\r\n                    <div className=\"d-flex flex-row py-4 align-items-center\">\r\n                        <Pagination totalRecords={this.state.totalCases} pageLimit={4} pageNeighbours={1}\r\n                                    requiredPage={this.state.requiredPage}\r\n                                    onPageChanged={this.onPageChanged}\r\n                        />\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ActiveCaseList);\r\n","import React, {Component} from \"react\";\r\nimport ActiveCaseList from \"./ActiveCaseList\";\r\n\r\nexport default class SupervisorComponent extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <ActiveCaseList/>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Button, Container, Table} from 'reactstrap';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport AuthService from \"../auth/AuthService\";\r\nimport authHeader from \"../auth/AuthHeader\";\r\nimport Pagination from \"./Pagination\";\r\n\r\nclass ActiveCaseManagedByHeadTeacherList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cases: [],\r\n            currentCases: [],\r\n            totalCases: null,\r\n            currentPage: null,\r\n            requiredPage: null,\r\n            totalPages: null,\r\n            pageLimit: null,\r\n            isLoading: true,\r\n        };\r\n        this.remove = this.remove.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.location.state !== null) {\r\n            this.setState({requiredPage: this.props.location.state.requiredPage});\r\n        }\r\n        this.setState({isLoading: true});\r\n        const currentUser = AuthService.getCurrentUser();\r\n        const id = currentUser.id;\r\n\r\n        fetch('api/cases/active/count/ht/' + id, {headers: authHeader()})\r\n            .then(response => response.json())\r\n            .then(data => this.setState({totalCases: data, isLoading: false}));\r\n    }\r\n\r\n    onPageChanged = data => {\r\n        const currentUser = AuthService.getCurrentUser();\r\n        const id = currentUser.id;\r\n\r\n        const {currentPage, totalPages, pageLimit} = data;\r\n        const offset = (currentPage - 1) * pageLimit;\r\n\r\n        fetch(`api/cases/active/ht/${id}?offset=${offset}&limit=${pageLimit}`, {headers: authHeader()})\r\n            .then(response => response.json())\r\n            .then(data => this.setState({currentCases: data, isLoading: false,\r\n                currentPage: currentPage, totalPages: totalPages, pageLimit: pageLimit}));\r\n    };\r\n\r\n    /**\r\n     * unused method for future's purposes\r\n     * **/\r\n    async remove(id) {\r\n        const headers = new Headers(authHeader());\r\n        headers.set('Accept', 'application/json');\r\n        headers.set('Content-Type', 'application/json');\r\n        const currentUser = AuthService.getCurrentUser();\r\n        await fetch(`/api/cases/${id}`, {\r\n            method: 'DELETE',\r\n            headers: headers\r\n        }).then(() => {\r\n            fetch('api/cases/active/count/ht/' + currentUser.id, {headers: authHeader()})\r\n                .then(response => response.json())\r\n                .then(data => this.setState({totalCases: data, isLoading: false}))\r\n                .then(() => {\r\n                    const {currentPage, pageLimit} = this.state;\r\n                    const offset = (currentPage - 1) * pageLimit;\r\n                    fetch(`api/cases/active/ht/${id}?offset=${offset}&limit=${pageLimit}`, {headers: authHeader()})\r\n                        .then(response => response.json())\r\n                        .then(data => this.setState({currentCases: data, isLoading: false}));\r\n                });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {currentCases, isLoading} = this.state;\r\n\r\n        if (isLoading) {\r\n            return <p>Loading...</p>;\r\n        }\r\n\r\n        const caseList = currentCases.map(aCase => {\r\n            var isRequired;\r\n            if (aCase.isCoverRequired) {isRequired='yes'} else {isRequired='no'}\r\n            var isProvided;\r\n            if (aCase.isCoverProvided) {isProvided = 'yes'} else {isProvided = 'no'}\r\n            var isResolved;\r\n            if (aCase.isCaseResolved) {isResolved = 'yes'} else {isResolved = 'no'}\r\n            return <tr key={aCase.id}>\r\n                <td style={{whiteSpace: 'nowrap'}}>{aCase.id}</td>\r\n                <td>{aCase.user.name || ''} {aCase.user.surname || ''}</td>\r\n                <td>{aCase.headTeacher.name || ''} {aCase.headTeacher.surname || ''}</td>\r\n                <td>{aCase.startDate}</td>\r\n                <td>{aCase.endDate}</td>\r\n                <td>{isRequired}</td>\r\n                <td>{isProvided}</td>\r\n                <td>{isResolved}</td>\r\n                <td>\r\n                    <Button style={{whiteSpace: 'nowrap', margin: '0 5px 0 auto', alignSelf: 'center'}}\r\n                            size=\"sm\" color=\"primary\"\r\n                            onClick={() => this.props.history.push({\r\n                                pathname: '/case_details',\r\n                                state: {aCase: aCase, returnAddress: '/active_cases_managed_by_headteacher', requiredPage: this.state.currentPage}\r\n                            })}>\r\n                        Details\r\n                    </Button>\r\n                    <Link to={{pathname: \"/cases/\" + aCase.id,\r\n                        state: {returnAddress: '/active_cases_managed_by_headteacher', requiredPage: this.state.currentPage}}}>\r\n                        <Button style={{whiteSpace: 'nowrap', margin: '0 5px 0 auto', alignSelf: 'center'}}\r\n                                size=\"sm\" color=\"warning\"\r\n                                disabled={aCase.isCaseResolved ? true : false}>\r\n                            Edit\r\n                        </Button>\r\n                    </Link>\r\n                </td>\r\n            </tr>\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <Container fluid>\r\n                    <div className=\"float-right\">\r\n                        <Link to={{pathname: '/active_cases', state: {requiredPage: 1}}}>\r\n                            <Button style={{whiteSpace: 'nowrap', margin: '0 5px 0 auto', alignSelf: 'center'}}\r\n                                    color=\"primary\">\r\n                                Show All Active Cases\r\n                            </Button>\r\n                        </Link>\r\n                        <Link to={{pathname: \"/cases\", state: {requiredPage: 1}}}>\r\n                            <Button style={{whiteSpace: 'nowrap', margin: '0 5px 0 auto', alignSelf: 'center'}}\r\n                                    color=\"primary\">\r\n                                Show All Cases\r\n                            </Button>\r\n                        </Link>\r\n                        <Link to={{pathname: '/cases/new',\r\n                            state: {returnAddress: '/active_cases_managed_by_headteacher', requiredPage: this.state.currentPage}}}>\r\n                            <Button style={{whiteSpace: 'nowrap', margin: '0 5px 0 auto', alignSelf: 'center'}}\r\n                                    color=\"success\">\r\n                                Add Employee Case\r\n                            </Button>\r\n                        </Link>\r\n                    </div>\r\n                    <h3>Absence Cases Managed By You (active)</h3>\r\n                    <Table className=\"mt-4\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th width=\"5%\">Id</th>\r\n                            <th width=\"15%\">User</th>\r\n                            <th width=\"15%\">Head Teacher</th>\r\n                            <th width=\"10%\">Start date</th>\r\n                            <th width=\"10%\">End date</th>\r\n                            <th width=\"5%\">Cover required?</th>\r\n                            <th width=\"5%\">Cover provided?</th>\r\n                            <th width=\"5%\">Case resolved?</th>\r\n                            <th width=\"20%\">Actions</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {caseList}\r\n                        </tbody>\r\n                    </Table>\r\n                    <div className=\"d-flex flex-row py-4 align-items-center\">\r\n                        <Pagination totalRecords={this.state.totalCases} pageLimit={4} pageNeighbours={1}\r\n                                    requiredPage={this.state.requiredPage}\r\n                                    onPageChanged={this.onPageChanged}\r\n                        />\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ActiveCaseManagedByHeadTeacherList);\r\n","import React, {Component} from \"react\";\r\nimport ActiveCaseList from \"./ActiveCaseList\";\r\n\r\nexport default class AdminComponent extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <ActiveCaseList/>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Button, Container, ListGroup, ListGroupItem, ListGroupItemHeading} from \"reactstrap\";\r\nimport {Link, withRouter} from \"react-router-dom\";\r\n\r\nclass CaseDetails extends Component {\r\n\r\n    render() {\r\n        const aCase = this.props.location.state.aCase;\r\n        const returnAddress = this.props.location.state.returnAddress;\r\n        const requiredPage = this.props.location.state.requiredPage;\r\n        var partDayType;\r\n        if (aCase.partDayType === 'AllDay') {\r\n            partDayType = 'All day'\r\n        } else {\r\n            partDayType = aCase.partDayType;\r\n        }\r\n        var isCoverRequired;\r\n        if (aCase.isCoverRequired) {isCoverRequired = 'YES'} else {isCoverRequired = 'NO'}\r\n        var isCoverProvided;\r\n        if (aCase.isCoverProvided) {isCoverProvided = 'YES'} else {isCoverProvided = 'NO'}\r\n        var isAbsenceApproved;\r\n        if (aCase.isApprovedByHeadTeacher) {isAbsenceApproved = 'YES'} else {isAbsenceApproved = 'NO'}\r\n        var isAbsencePaid;\r\n        if (aCase.isAbsencePaid) {isAbsencePaid = 'YES'} else {isAbsencePaid = 'NO'}\r\n        var isCaseResolved;\r\n        if (aCase.isCaseResolved) {isCaseResolved = 'YES'} else {isCaseResolved = 'NO'}\r\n\r\n        return (\r\n            <div>\r\n                <Container fluid>\r\n                    <ListGroup>\r\n                        <ListGroupItemHeading>Case details</ListGroupItemHeading>\r\n                        <div className=\"row\">\r\n                            <ListGroupItem className=\"rounded block-example border border-dark col-md-2 mb-1\">Case id:  {aCase.id}</ListGroupItem>\r\n                            <ListGroupItem className=\"rounded block-example border border-dark col-md-4 mb-1\">User:  {aCase.user.name} {aCase.user.surname}</ListGroupItem>\r\n                            <ListGroupItem className=\"rounded block-example border border-dark col-md-6 mb-1\">User title:  {aCase.user.jobTitle}</ListGroupItem>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <ListGroupItem className=\"rounded block-example border border-dark col-md-5 mb-1\">Head Teacher:  {aCase.headTeacher.name} {aCase.headTeacher.surname}</ListGroupItem>\r\n                            <ListGroupItem className=\"rounded block-example border border-dark col-md-7 mb-1\">Head Teacher title:  {aCase.headTeacher.jobTitle}</ListGroupItem>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <ListGroupItem className=\"rounded block-example border border-dark col-md-4 mb-1\">Start date:  {aCase.startDate}</ListGroupItem>\r\n                            <ListGroupItem className=\"rounded block-example border border-dark col-md-4 mb-1\">End date:  {aCase.endDate}</ListGroupItem>\r\n                            <ListGroupItem className=\"rounded block-example border border-dark col-md-4 mb-1\">Part day type:  {partDayType}</ListGroupItem>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <ListGroupItem className=\"rounded block-example border border-dark col-md-12 mb-1\">Absence reason:  {aCase.absenceReason}</ListGroupItem>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <ListGroupItem className=\"rounded block-example border border-dark col-md-12 mb-1\">User comment:  {aCase.userComment}</ListGroupItem>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <ListGroupItem className=\"rounded block-example border border-dark col-md-2 mb-1\">Cover required: {isCoverRequired}</ListGroupItem>\r\n                            <ListGroupItem className=\"rounded block-example border border-dark col-md-2 mb-1\">Cover provided: {isCoverProvided}</ListGroupItem>\r\n                            <ListGroupItem className=\"rounded block-example border border-dark col-md-8 mb-1\">Cover Supervisor comment:  {aCase.coverSupervisorComment}</ListGroupItem>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <ListGroupItem className=\"rounded block-example border border-dark col-md-3 mb-1\">Absence approved: {isAbsenceApproved}</ListGroupItem>\r\n                            <ListGroupItem className=\"rounded block-example border border-dark col-md-2 mb-1\">Absence paid: {isAbsencePaid}</ListGroupItem>\r\n                            <ListGroupItem className=\"rounded block-example border border-dark col-md-7 mb-1\">Head Teacher comment:  {aCase.headTeacherComment}</ListGroupItem>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <ListGroupItem className=\"rounded block-example border border-dark col-md-10 mb-2\">HR Supervisor comment:  {aCase.hrSupervisorComment}</ListGroupItem>\r\n                            <ListGroupItem className=\"rounded block-example border border-dark col-md-2 mb-2\">Case resolved: {isCaseResolved}</ListGroupItem>\r\n                        </div>\r\n                    </ListGroup>\r\n                    <div className=\"float-right\">\r\n                        <Link to={{pathname: returnAddress, state: {requiredPage: requiredPage}}}>\r\n                            <Button style={{whiteSpace: 'nowrap', margin: '0 5px 0 auto', alignSelf: 'center'}}\r\n                                    color=\"primary\">Back to list</Button>\r\n                        </Link>\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(CaseDetails);\r\n","import React, { Component } from 'react';\r\nimport { Button, Container, Table } from 'reactstrap';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport AuthService from \"../auth/AuthService\";\r\nimport authHeader from \"../auth/AuthHeader\";\r\nimport Pagination from \"./Pagination\";\r\n\r\nclass AllCaseList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allCases: [],\r\n            currentCases: [],\r\n            totalCases: null,\r\n            currentPage: null,\r\n            requiredPage: null,\r\n            totalPages: null,\r\n            pageLimit: null,\r\n            displayButton: \"none\",\r\n            displayHeadTeacherButton: \"none\",\r\n            isLoading: true,\r\n        };\r\n        this.remove = this.remove.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.location.state !== null) {\r\n            this.setState({requiredPage: this.props.location.state.requiredPage});\r\n        }\r\n        this.setState({isLoading: true});\r\n        const currentUser = AuthService.getCurrentUser();\r\n        if (currentUser.roles.includes(\"ROLE_ADMIN\")) {\r\n            this.setState({displayButton: \"\"})\r\n        }\r\n        if (currentUser.roles.includes(\"ROLE_HEAD_TEACHER\")) {\r\n            this.setState({displayHeadTeacherButton: \"\"})\r\n        }\r\n\r\n        fetch('api/cases/count', {headers: authHeader()})\r\n            .then(response => response.json())\r\n            .then(data => this.setState({totalCases: data, isLoading: false}))\r\n            .then(() => {\r\n            });\r\n    }\r\n\r\n    onPageChanged = data => {\r\n        const {currentPage, totalPages, pageLimit} = data;\r\n        const offset = (currentPage - 1) * pageLimit;\r\n\r\n        fetch(`api/cases?offset=${offset}&limit=${pageLimit}`, {headers: authHeader()})\r\n            .then(response => response.json())\r\n            .then(data => this.setState({currentCases: data, isLoading: false,\r\n                currentPage: currentPage, totalPages: totalPages, pageLimit: pageLimit}));\r\n    };\r\n\r\n    async remove(id) {\r\n        const headers = new Headers(authHeader());\r\n        headers.set('Accept', 'application/json');\r\n        headers.set('Content-Type', 'application/json');\r\n\r\n        await fetch(`/api/cases/${id}`, {\r\n            method: 'DELETE',\r\n            headers: headers\r\n        }).then(() => {\r\n            fetch('api/cases/count', {headers: authHeader()})\r\n                .then(response => response.json())\r\n                .then(data => this.setState({totalCases: data, isLoading: false}))\r\n                .then(() => {\r\n                    const {currentPage, pageLimit} = this.state;\r\n                    const offset = (currentPage - 1) * pageLimit;\r\n                    fetch(`api/cases?offset=${offset}&limit=${pageLimit}`, {headers: authHeader()})\r\n                        .then(response => response.json())\r\n                        .then(data => this.setState({currentCases: data, isLoading: false}));\r\n                });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {currentCases, displayButton, displayHeadTeacherButton, isLoading} = this.state;\r\n\r\n        if (isLoading) {\r\n            return <p>Loading...</p>;\r\n        }\r\n\r\n        const caseList = currentCases.map(aCase => {\r\n            const currentUser = AuthService.getCurrentUser();\r\n            var isRequired;\r\n            if (aCase.isCoverRequired) {isRequired='yes'} else {isRequired='no'}\r\n            var isProvided;\r\n            if (aCase.isCoverProvided) {isProvided='yes'} else {isProvided='no'}\r\n            var isResolved;\r\n            if (aCase.isCaseResolved) {isResolved='yes'} else {isResolved='no'}\r\n            return <tr key={aCase.id}>\r\n                <td style={{whiteSpace: 'nowrap'}}>{aCase.id}</td>\r\n                <td>{aCase.user.name || ''} {aCase.user.surname || ''}</td>\r\n                <td>{aCase.headTeacher.name || ''} {aCase.headTeacher.surname || ''}</td>\r\n                <td>{aCase.startDate}</td>\r\n                <td>{aCase.endDate}</td>\r\n                <td>{isRequired}</td>\r\n                <td>{isProvided}</td>\r\n                <td>{isResolved}</td>\r\n                <td>\r\n                    <Button style={{whiteSpace: 'nowrap', margin: '0 5px 0 auto', alignSelf: 'center'}}\r\n                            size=\"sm\" color=\"primary\"\r\n                            onClick={() => this.props.history.push({\r\n                                pathname: '/case_details',\r\n                                state: {aCase: aCase, returnAddress: '/cases', requiredPage: this.state.currentPage}})}>\r\n                        Details\r\n                    </Button>\r\n                    <Link to={{pathname: \"/cases/\" + aCase.id,\r\n                        state: {returnAddress: '/cases', requiredPage: this.state.currentPage}}}>\r\n                        <Button style={{whiteSpace: 'nowrap', margin: '0 5px 0 auto', alignSelf: 'center'}}\r\n                                size=\"sm\" color=\"warning\"\r\n                                disabled={aCase.isCaseResolved && !currentUser.roles.includes(\"ROLE_ADMIN\") ? true : false}>\r\n                            Edit\r\n                        </Button>\r\n                    </Link>\r\n                    <Button style={{whiteSpace: 'nowrap', margin: '0 5px 0 auto', alignSelf: 'center', display: `${displayButton}`}}\r\n                            size=\"sm\" color=\"danger\"\r\n                            onClick={() => {if (window.confirm('Are you sure you want to delete this case?'))\r\n                                this.remove(aCase.id);}}>\r\n                        Delete\r\n                    </Button>\r\n                </td>\r\n            </tr>\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <Container fluid>\r\n                    <div className=\"float-right\">\r\n                        <Link to={{pathname: '/active_cases_managed_by_headteacher', state: {requiredPage: 1}}}>\r\n                            <Button style={{whiteSpace: 'nowrap', margin: '0 5px 0 auto', alignSelf: 'center', display: `${displayHeadTeacherButton}`}}\r\n                                    color=\"primary\">\r\n                                Show All Active Head Teacher Cases\r\n                            </Button>\r\n                        </Link>\r\n                        <Link to={{pathname: '/active_cases', state: {requiredPage: 1}}}>\r\n                            <Button style={{whiteSpace: 'nowrap', margin: '0 5px 0 auto', alignSelf: 'center'}}\r\n                                    color=\"primary\">\r\n                                Show All Active Cases\r\n                            </Button>\r\n                        </Link>\r\n                        <Link to={{pathname: '/cases/new',\r\n                            state: {returnAddress: '/cases', requiredPage: this.state.currentPage}}}>\r\n                            <Button style={{whiteSpace: 'nowrap', margin: '0 5px 0 auto', alignSelf: 'center'}}\r\n                                    color=\"success\">\r\n                                Add Employee Case\r\n                            </Button>\r\n                        </Link>\r\n                    </div>\r\n                    <h3>Absence Cases (all)</h3>\r\n                    <Table className=\"mt-4\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th width=\"5%\">Id</th>\r\n                            <th width=\"15%\">User</th>\r\n                            <th width=\"15%\">Head Teacher</th>\r\n                            <th width=\"10%\">Start date</th>\r\n                            <th width=\"10%\">End date</th>\r\n                            <th width=\"5%\">Cover required?</th>\r\n                            <th width=\"5%\">Cover provided?</th>\r\n                            <th width=\"5%\">Case resolved?</th>\r\n                            <th width=\"20%\">Actions</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {caseList}\r\n                        </tbody>\r\n                    </Table>\r\n                    <div className=\"d-flex flex-row py-4 align-items-center\">\r\n                        <Pagination totalRecords={this.state.totalCases} pageLimit={4} pageNeighbours={1}\r\n                                    requiredPage={this.state.requiredPage}\r\n                                    onPageChanged={this.onPageChanged}\r\n                        />\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(AllCaseList);\r\n","import React, {Component} from \"react\";\r\nimport {Container} from 'reactstrap';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Help extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container fluid>\r\n                    <h2 className=\"mb-3\">Absence Management System</h2>\r\n                    <p className=\"mb-1\">This simple application has been designed to facilitate handling of crew\r\n                        absences in one of public schools in Cumbria.</p>\r\n                    <p className=\"mb-3\">If you want, you can implement it for free in your school (or other organization) –\r\n                        in this case contact me on: <a href=\"mailto:radek.jerzynski@gmail.com\">radek.jerzynski@gmail.com</a></p>\r\n                    <h5>I. HOW TO USE THIS APP</h5>\r\n                    <ul className=\"ml-lg-0\">\r\n                        <li className=\"mb-0\">Logging in is required to use this app. You can log in as: USER,\r\n                            COVER SUPERVISOR, HEAD TEACHER, HUMAN RESOURCES SUPERVISOR or ADMIN.</li>\r\n                        <li className=\"mb-0\">After logging in, each user can see their User Board with all their absence\r\n                            cases, can add their absence case and view the details of the case.\r\n                            User cannot edit or delete absence cases on this dashboard. USER can see only User Board.</li>\r\n                        <li className=\"mb-0\">COVER SUPERVISOR, HEAD TEACHERS, HUMAN RESOURCES SUPERVISOR and ADMIN\r\n                            have also access to Cover Supervisor Board / Head Teacher Board / HR Supervisor Board /\r\n                            Admin Board respectively. These boards display a list of all active cases by default.\r\n                            It is also possible to display a list of all cases using the button \"Show All Cases\".\r\n                            HEAD TEACHER can also display a list of self-managed active cases.</li>\r\n                        <li className=\"mb-0\">Case details can be viewed by clicking the \"Details\" button.</li>\r\n                        <li className=\"mb-0\">Each active case (not marked as \"resolved\") can be edited.</li>\r\n                        <li className=\"mb-0\">Clicking \"Add Employee Case\" opens a form that allows you to add\r\n                            a new absence case of each user existing in the database.</li>\r\n                        <li className=\"mb-0\">Only ADMIN can delete any case. It happens very rarely.</li>\r\n                        <li className=\"mb-0\">If a case marked as \"resolved\" must be edited, ADMIN can do this.</li>\r\n                        <li className=\"mb-0\">\r\n                            <a>And only ADMIN can see, add, edit and delete users from the database, including her/himself. </a>\r\n                            <a className=\"font-weight-bold text-danger\">So be very careful</a>\r\n                            <a> – after deleting user with ADMIN authorisation,\r\n                                managing users will be impossible. In this case just contact me (</a>\r\n                            <a href=\"mailto:radek.jerzynski@gmail.com\">radek.jerzynski@gmail.com</a>\r\n                            <a>), I will solve this problem adding a new admin to the database.</a>\r\n                        </li>\r\n                    </ul>\r\n                    <Link to='/help2' className=\"mr-5\">II. Predefined users and cases</Link>\r\n                    <Link to='/help3' className=\"mr-5\">III. Application requirements</Link>\r\n                    <Link to='/help4' className=\"mr-5\">IV. How it works</Link>\r\n                    <Link to='/help5' className=\"mr-5\">V. TO DO</Link>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Help;\r\n","import React, {Component} from \"react\";\r\nimport {Container} from 'reactstrap';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Help2 extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container fluid>\r\n                    <h2 className=\"mb-3\">Absence Management System</h2>\r\n                    <h5>II. PREDEFINED USERS AND CASES</h5>\r\n                    <p className=\"mb-1\">To let you test this application there are some predefined users and absence cases in the database.</p>\r\n                    <p className=\"mb-1\">You can log in as one of predefined users:</p>\r\n                    <ul className=\"ml-lg-0 mb-1\">\r\n                        <li className=\"mb-0\">USER (basic) – login: rdx7777.test@gmail.com, rdx7777.test1@gmail.com</li>\r\n                        <li className=\"mb-0\">COVER SUPERVISOR – login: rdx7777.test2@gmail.com</li>\r\n                        <li className=\"mb-0\">HEAD TEACHER – login: rdx7777.test3@gmail.com, rdx7777.test4@gmail.com</li>\r\n                        <li className=\"mb-0\">HUMAN RESOURCES SUPERVISOR – login: rdx7777.test5@gmail.com</li>\r\n                        <li className=\"mb-0\">ADMIN – login: rdx.7777@yahoo.com</li>\r\n                        <li className=\"mb-0\">A password for every account is: test</li>\r\n                    </ul>\r\n                    <p className=\"mb-1\">After logging in as a USER, you can see all user cases, add a case and display details of the case.</p>\r\n                    <p className=\"mb-1\">As a COVER SUPERVISOR, HEAD TEACHER or HUMAN RESOURCES SUPERVISOR you can act as a USER\r\n                        and additionally see all active case in the organization, see all cases (including these marked as \"resolved\")\r\n                        and display the details of each case. You can also add and edit a case of any user existing in the database.\r\n                        Before doing it check the <Link to='/help3'>requirements</Link>.</p>\r\n                    <p className=\"mb-1\">There are also some predefined absence cases saved in the database – you can explore them after logging in\r\n                        as a specific user.</p>\r\n                    <Link to='/help' className=\"mr-5\">I. How to use this app</Link>\r\n                    <Link to='/help3' className=\"mr-5\">III. Application requirements</Link>\r\n                    <Link to='/help4' className=\"mr-5\">IV. How it works</Link>\r\n                    <Link to='/help5' className=\"mr-5\">V. TO DO</Link>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Help2;\r\n","import React, {Component} from \"react\";\r\nimport {Container} from 'reactstrap';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Help3 extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container fluid>\r\n                    <h2 className=\"mb-3\">Absence Management System</h2>\r\n                    <h5>III. APPLICATION REQUIREMENTS</h5>\r\n                    <ul className=\"ml-lg-0\">\r\n                        <li className=\"font-weight-bold mb-1\">Users saved in the database</li>\r\n                        <p className=\"mb-1\">The application requires that the following users\r\n                            with properly assigned authorisation roles and positions are saved in the database:</p>\r\n                        <p className=\"mb-0\">1. ADMIN (position: Employee, authorisation: admin)</p>\r\n                        <p className=\"mb-0\">2. COVER SUPERVISOR (position: Cover Supervisor, authorisation: cover supervisor)</p>\r\n                        <p className=\"mb-0\">3. HEAD TEACHER (position: Head Teacher, authorisation: head teacher)</p>\r\n                        <p className=\"mb-0\">4. HUMAN RESOURCES SUPERVISOR (position: HR supervisor, authorisation: HR supervisor)</p>\r\n                        <p className=\"mb-1\">5. and some \"simple\" USERS of course (position: Employee, authorisation: user)</p>\r\n                        <p className=\"mb-1\"><a>Only one COVER SUPERVISOR and only one HUMAN RESOURCES SUPERVISOR can be saved\r\n                            in the database. </a>\r\n                            <a>When any next of these supervisors are added to database, </a>\r\n                            <a className=\"text-danger\">the app will not work properly, </a>\r\n                            <a>especially when it comes to sending emails to the right person.</a></p>\r\n                        <li className=\"font-weight-bold mb-0\">Adding a new case or editing an existing case\r\n                            (also a new or existing user)</li>\r\n                        <p className=\"mb-1\">When adding a new or editing an existing case all fields in a form marked\r\n                            with asterisks have to be filled.</p>\r\n                        <p className=\"mb-1\">When ADMIN is editing user data, the user's password is displayed in an encrypted version.\r\n                            If you need to change this password, just enter a new password in plain text - it will be encrypted\r\n                            when the app saves it to the database.</p>\r\n                        <p className=\"mb-0\">Because this is really simple application, it does not currently support\r\n                            the following situations (and does not display error messages):</p>\r\n                        <p className=\"mb-0\">\r\n                            <a>– when a Head Teacher is adding or editing her/his own case as a User on any privileged dashboard\r\n                                (it means: not basic User Board) and gives her/himself as a Head Teacher, </a>\r\n                            <a className=\"text-danger\">this case will not be saved or updated in database</a>\r\n                            <a>,</a>\r\n                        </p>\r\n                        <p className=\"mb-0\">\r\n                            <a>– if any of the required field is not filled, </a>\r\n                            <a className=\"text-danger\">a case will not be saved or updated in database</a>\r\n                            <a>.</a>\r\n                        </p>\r\n                    </ul>\r\n                    <Link to='/help' className=\"mt-0 mr-5\">I. How to use this app</Link>\r\n                    <Link to='/help2' className=\"mt-0 mr-5\">II. Predefined users and cases</Link>\r\n                    <Link to='/help4' className=\"mt-0 mr-5\">IV. How it works</Link>\r\n                    <Link to='/help5' className=\"mt-0 mr-5\">V. TO DO</Link>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Help3;\r\n","import React, {Component} from \"react\";\r\nimport {Container} from 'reactstrap';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Help4 extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container fluid>\r\n                    <h2 className=\"mb-3\">Absence Management System</h2>\r\n                    <h5>IV. HOW IT WORKS</h5>\r\n                    <ul className=\"ml-lg-0\">\r\n                        <li className=\"mb-1\">When a USER needs to report any absence, she/he logs in to the application\r\n                            and adds their case. The app saves this case in a database and sends an email to the COVER SUPERVISOR\r\n                            with message \"Action required\".</li>\r\n                        <li className=\"mb-1\">\r\n                            <a>COVER SUPERVISOR logs in to the application, finds the case whose id is given\r\n                            in the email message (usually it is displayed as the first case on the page), edits it when required\r\n                            (especially about ensuring teacher cover) and saves the case (even if nothing was changed – </a>\r\n                            <a className=\"font-weight-bold text-danger\">it is critically required</a>\r\n                            <a>). Then the app sends an email to the appropriate HEAD TEACHER, provided by the USER.</a>\r\n                        </li>\r\n                        <li className=\"mb-1\">HEAD TEACHER logs in to the application, finds the case, edits it\r\n                            (\"Absence approved\" & \"Absence paid\" fields must be checked) and saves.\r\n                            The next email is sent to HUMAN RESOURCES SUPERVISOR.</li>\r\n                        <li className=\"mb-1\">HUMAN RESOURCES SUPERVISOR logs in to the application, checks data and saves the case.\r\n                            If \"Case resolved\" field is marked with \"yes\", the app sends email to USER with message\r\n                            \"Your case has been resolved\".</li>\r\n                        <li className=\"mb-1\">If necessary every privileged user can add a case of any employee.</li>\r\n                    </ul>\r\n                    <Link to='/help' className=\"mr-5\">I. How to use this app</Link>\r\n                    <Link to='/help2' className=\"mr-5\">II. Predefined users and cases</Link>\r\n                    <Link to='/help3' className=\"mr-5\">III. Application requirements</Link>\r\n                    <Link to='/help5' className=\"mr-5\">V. TO DO</Link>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Help4;\r\n","import React, {Component} from \"react\";\r\nimport {Container} from 'reactstrap';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Help5 extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container fluid>\r\n                    <h2 className=\"mb-3\">Absence Management System</h2>\r\n                    <h5>V. TO DO</h5>\r\n                    <ul className=\"ml-lg-0\">\r\n                        <li className=\"mb-1\">Search buttons (User's cases, cases managed by provided Head Teacher, cases by issued dates).</li>\r\n                        <li className=\"mb-1\">Possibility of sorting cases by user's surname & name.</li>\r\n                        <li className=\"mb-1\">Form validation at client side (checking required fields, comparing if User equals Head Teacher).</li>\r\n                        <li className=\"mb-1\">Improve user data editing (displaying password with asterisks, double check new password).</li>\r\n                        <li className=\"mb-1\">Scope of case editing depending on the position (different for Cover Supervisor, Head Teacher and HR Supervisor).</li>\r\n                    </ul>\r\n                    <Link to='/help' className=\"mr-5\">I. How to use this app</Link>\r\n                    <Link to='/help2' className=\"mr-5\">II. Predefined users and cases</Link>\r\n                    <Link to='/help3' className=\"mr-5\">III. Application requirements</Link>\r\n                    <Link to='/help4' className=\"mr-5\">IV. How it works</Link>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Help5;\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport Home from './component/Home';\nimport {BrowserRouter as Router, Link, Route, Switch} from 'react-router-dom';\nimport CaseEdit from \"./component/CaseEdit\";\nimport AllUserList from \"./component/AllUserList\";\nimport UserEdit from \"./component/UserEdit\";\nimport UserComponent from \"./component/UserComponent\";\nimport AddUserCase from \"./component/AddUserCase\";\nimport AuthService from \"./auth/AuthService\";\nimport SupervisorComponent from \"./component/SupervisorComponent\";\nimport ActiveCaseList from \"./component/ActiveCaseList\";\nimport ActiveCaseManagedByHeadTeacherList from \"./component/ActiveCaseManagedByHeadTeacherList\";\nimport AdminComponent from \"./component/AdminComponent\";\nimport CaseDetails from \"./component/CaseDetails\";\nimport authHeader from \"./auth/AuthHeader\";\nimport AllCaseList from \"./component/AllCaseList\";\nimport Help from \"./component/Help\";\nimport Help2 from \"./component/Help2\";\nimport Help3 from \"./component/Help3\";\nimport Help4 from \"./component/Help4\";\nimport Help5 from \"./component/Help5\";\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.logOut = this.logOut.bind(this);\n        this.state = {\n            showCoverSupervisorBoard: false,\n            showHeadTeacherBoard: false,\n            showHRSupervisorBoard: false,\n            showAdminBoard: false,\n            currentUser: undefined,\n            userForShow: ''\n        };\n    }\n\n    componentDidMount() {\n        const user = AuthService.getCurrentUser();\n        if (user) {\n            this.setState({\n                currentUser: AuthService.getCurrentUser(),\n                showCoverSupervisorBoard: user.roles.includes(\"ROLE_CS_SUPERVISOR\"),\n                showHeadTeacherBoard: user.roles.includes(\"ROLE_HEAD_TEACHER\"),\n                showHRSupervisorBoard: user.roles.includes(\"ROLE_HR_SUPERVISOR\"),\n                showAdminBoard: user.roles.includes(\"ROLE_ADMIN\")\n            });\n            // fetch('api/users/' + AuthService.getCurrentUser().id, {headers: authHeader()})\n            //     .then(response => response.json())\n            //     .then(data => this.setState({userForShow: data}));\n            fetch('api/users/show_user/' + AuthService.getCurrentUser().id, {headers: authHeader()})\n                .then(response => response.json())\n                .then(data => this.setState({userForShow: data}));\n        }\n    }\n\n    logOut() {\n        AuthService.logout();\n    }\n\n    render() {\n        const {currentUser, userForShow, showCoverSupervisorBoard, showHeadTeacherBoard, showHRSupervisorBoard, showAdminBoard} = this.state;\n\n        return (\n            <Router>\n                <div>\n                    <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n\n                        {currentUser && (\n                            // <li className=\"nav-item\">\n                                <Link to={{pathname: \"/user\", state: {requiredPage: 1}}} className=\"navbar-brand\">\n                                    AMSystem\n                                </Link>\n                            // </li>\n                        )}\n\n                        <Link to={'/help'} className=\"navbar-brand\">\n                            [help]\n                        </Link>\n\n                        <div className=\"navbar-nav mr-auto\">\n\n                            {currentUser && (\n                                <li className=\"nav-item\">\n                                    <Link to={{pathname: \"/user\", state: {requiredPage: 1}}} className=\"nav-link\">\n                                        User Board: {userForShow.name} {userForShow.surname} ({userForShow.jobTitle})\n                                    </Link>\n                                </li>\n                            )}\n\n                            {showCoverSupervisorBoard && (\n                                <li className=\"nav-item\">\n                                    <Link to={{pathname: \"/supervisor\", state: {requiredPage: 1}}} className=\"nav-link\">\n                                        Cover Supervisor Board\n                                    </Link>\n                                </li>\n                            )}\n\n                            {showHeadTeacherBoard && (\n                                <li className=\"nav-item\">\n                                    <Link to={{pathname: \"/supervisor\", state: {requiredPage: 1}}} className=\"nav-link\">\n                                        Head Teacher Board\n                                    </Link>\n                                </li>\n                            )}\n\n                            {showHRSupervisorBoard && (\n                                <li className=\"nav-item\">\n                                    <Link to={{pathname: \"/supervisor\", state: {requiredPage: 1}}} className=\"nav-link\">\n                                        HR Supervisor Board\n                                    </Link>\n                                </li>\n                            )}\n\n                            {showAdminBoard && (\n                                <div className=\"navbar-nav ml-auto\">\n                                    <li className=\"nav-item\">\n                                        <Link to={{pathname: \"/admin\", state: {requiredPage: 1}}} className=\"nav-link\">\n                                            Admin Board: Cases\n                                        </Link>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <Link to={{pathname: \"/users\", state: {requiredPage: 1}}} className=\"nav-link\">\n                                            Admin Board: Users\n                                        </Link>\n                                    </li>\n                                </div>\n                            )}\n                        </div>\n\n                        {currentUser ? (\n                            <div className=\"navbar-nav ml-auto\">\n                                <li className=\"nav-item\">\n                                    <a href=\"/\" className=\"nav-link\" onClick={this.logOut}>\n                                        LogOut\n                                    </a>\n                                </li>\n                            </div>\n                        ) : (\n                            <div className=\"navbar-nav ml-auto\">\n                                <li className=\"nav-item\">\n                                    <Link to={\"/\"} className=\"nav-link\">\n                                        Login\n                                    </Link>\n                                </li>\n                            </div>\n                        )}\n                    </nav>\n\n                    <div className=\"container mt-3\">\n                        <Switch>\n                            <Route path='/' exact={true} component={Home}/>\n                            <Route path='/user' exact={true} component={UserComponent}/>\n                            <Route path='/add_user_case' exact={true} component={AddUserCase}/>\n                            <Route path='/supervisor' exact={true} component={SupervisorComponent}/>\n                            <Route path='/cases' exact={true} component={AllCaseList}/>\n                            <Route path='/active_cases' exact={true} component={ActiveCaseList}/>\n                            <Route path='/active_cases_managed_by_headteacher' exact={true}\n                                   component={ActiveCaseManagedByHeadTeacherList}/>\n                            <Route path='/cases/:id' component={CaseEdit}/>\n                            <Route path='/admin' exact={true} component={AdminComponent}/>\n                            <Route path='/users' exact={true} component={AllUserList}/>\n                            <Route path='/users/:id' component={UserEdit}/>\n                            <Route path='/case_details' exact={true} component={CaseDetails}/>\n                            <Route path='/help' exact={true} component={Help}/>\n                            <Route path='/help2' exact={true} component={Help2}/>\n                            <Route path='/help3' exact={true} component={Help3}/>\n                            <Route path='/help4' exact={true} component={Help4}/>\n                            <Route path='/help5' exact={true} component={Help5}/>\n                        </Switch>\n                    </div>\n                </div>\n            </Router>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}